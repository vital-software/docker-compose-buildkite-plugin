steps:
  - label: ":shell: Shellcheck"
    plugins:
      shellcheck#v1.1.2:
        files:
          - hooks/**
          - lib/**
          - commands/**

  - label: ":sparkles: Lint"
    plugins:
      plugin-linter#v2.0.0:
        id: docker-compose

  - label: ":bash: Tests"
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: tests

  - wait
  - label: run, with links that fail
    command: echo hello from alpine
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: alpinewithfailinglink
        config: tests/composefiles/docker-compose.v2.1.yml

  - wait
  - label: run, with environment
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: alpinewithenv
        config: tests/composefiles/docker-compose.v2.1.yml
        environment:
          - ALPACAS=sometimes

  - wait
  - label: run, with multi-line command
    command: |
      echo \
      hello \
      world
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: alpinewithenv
        config: tests/composefiles/docker-compose.v2.1.yml

  - wait
  - label: prebuild with v2.0
    command: /hello
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        build: helloworld
        image-repository: ${DOCKER_REPO-buildkiteci/docker-compose-buildkite-plugin}
        config: tests/composefiles/docker-compose.v2.0.yml

  - wait
  - label: run after build with v2.0
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: helloworld
        require-prebuild: true
        config: tests/composefiles/docker-compose.v2.0.yml
        command: ["/hello"]

  - wait
  - label: prebuild with v2.1
    command: /hello
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        build: helloworld
        image-repository: ${DOCKER_REPO-buildkiteci/docker-compose-buildkite-plugin}
        config: tests/composefiles/docker-compose.v2.1.yml

  - wait
  - label: run after build with v2.1
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: helloworld
        require-prebuild: true
        config: tests/composefiles/docker-compose.v2.1.yml
        command: ["/hello"]

  - wait
  - label: run with default command
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: helloworld
        config: tests/composefiles/docker-compose.v2.1.yml

  - wait
  - label: prebuild, where service has build and image-name
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        build: helloworldimage
        image-repository: ${DOCKER_REPO-buildkiteci/docker-compose-buildkite-plugin}
        config: tests/composefiles/docker-compose.v2.1.yml
        commmand: ["/hello"]

  - wait
  - label: run after prebuild
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: helloworldimage
        require-prebuild: true
        config: tests/composefiles/docker-compose.v2.1.yml
        commmand: ["/hello"]

  - wait
  - label: prebuild with custom image-name
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        build: helloworld
        image-repository: ${DOCKER_REPO-buildkiteci/docker-compose-buildkite-plugin}
        image-name: llamas-build-${BUILDKITE_BUILD_NUMBER}
        config: tests/composefiles/docker-compose.v2.1.yml

  - wait
  - label: run after prebuild with custom image-name
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        run: helloworld
        require-prebuild: true
        config: tests/composefiles/docker-compose.v2.1.yml
        commmand: ["/hello"]

  - wait
  - label: push after build with custom image-name
    plugins:
      ${BUILDKITE_REPO}#${BUILDKITE_COMMIT}:
        push: helloworld
        image-name: llamas-build-${BUILDKITE_BUILD_NUMBER}
        config: tests/composefiles/docker-compose.v2.1.yml
